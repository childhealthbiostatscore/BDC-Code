---
title: "CGM Trajectory Analysis"
author: "Laura Pyle & Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
    theme:
      light: flatly
      dark: darkly
editor: source
---

```{r setup}
#| include: false
library(tidyverse)
library(haven)
library(hms)
library(knitr)
library(gtsummary)
library(lcmm)
library(stringr)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/BDC/Andrea Steck/Advanced CGM and OGTT",
  "Linux" = "/home/timvigers/OneDrive/Vigers/BDC/Andrea Steck/Advanced CGM and OGTT"
)
home_dir <- '/Users/pylell/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/BDC/Andrea Steck/Advanced CGM and OGTT'
github_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Documents/GitHub",
  "Linux" = "/home/timvigers/Documents/GitHub"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r}
# Set a seed for trajectory analyses
set.seed(1017)
# Import CGM data from Fran
cgm <- read_sas('/Users/pylell/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/BDC/Andrea Steck/Advanced CGM and OGTT/Data_Raw/Final data for CGM analyses 09012023/rawcgmdata_clean.sas7bdat')
# Convert from numeric time to datetime, round to nearest 5 minutes
cgm$sensordisplaytime <-
  as.POSIXct(cgm$sensordisplaytime, origin = "1960-01-01")
cgm$sensordisplaytime <- round_date(cgm$sensordisplaytime, "5 minutes")
# Separate date and time columns, format
cgm$Date <- as_date(cgm$sensordisplaytime)
cgm$Time <- as_hms(cgm$sensordisplaytime)
cgm <- cgm %>%
  arrange(ID, sensordisplaytime) %>%
  select(ID, Date, Time, DOVISIT, sensorvalue)
# For now, if people have duplicated sensor values, take the mean
cgm <- cgm %>%
  group_by(ID, Date, Time, DOVISIT) %>%
  summarise(sensorvalue = mean(sensorvalue, na.rm = T), .groups = "drop")
# Import demographic, etc. data
df <- read.csv("./Data_Clean/Longitudinal CGM data for 165 subjects.csv",
  na.strings = c("", ".")
)
# Remove unhelpful rows
df <- df %>% filter(!is.na(ID))
# Determine group
df$Group <- factor(is.na(df$Date.of.T1D.dx),
  levels = c(T, F),
  labels = c("Non-Progressor", "Progressor")
)
# Convert columns
df$age.at.clinic <- as.numeric(df$age.at.clinic)
df$DOVISIT <- mdy(df$DOVISIT)
df$DOB <- mdy(df$DOB)
df$Date.of.T1D.dx <- mdy(df$Date.of.T1D.dx)
# Calculate final visit date (or T1D progression)
df$final_visit <- df$DOVISIT - round(df$yearsfromT1D * 365.25)
# Select only necessary columns
df <- df %>%
  select(
    ID, DOVISIT, A1C, age.at.clinic, SEX, FDR.status, Race_Ethn2, HLAGRP, Group,
    final_visit, DOB, Date.of.T1D.dx
  )
# Put together
cgm <- left_join(cgm, df, by = join_by(ID, DOVISIT))
# Sort
cgm <- cgm %>% arrange(ID, Date, Time)

# calculate time for time to event
cgm$survtime <- ifelse(cgm$Group == "Progressor", cgm$Date.of.T1D.dx - cgm$DOB, cgm$final_visit - cgm$DOB)

# lcmm seems to want numeric ID?
cgm$numID <- str_remove_all(cgm$ID, "-")
cgm$numID <- as.numeric(cgm$numID)
```

# Average all CGM days

```{r}
# take average trajectory
mean_cgm <- cgm %>%
  group_by(numID, Group, Time) %>%
  summarise(Glucose = mean(sensorvalue, na.rm = T), .groups = "drop")
# merge back in covariates
c <- cgm %>% select(numID, DOVISIT, A1C, age.at.clinic, SEX, FDR.status, Race_Ethn2, HLAGRP,  final_visit, DOB, Date.of.T1D.dx, survtime) %>% 
  arrange(numID, age.at.clinic)
c <-   c %>% group_by(numID) %>% filter(row_number() == 1)
mean_cgm <- left_join(mean_cgm, c, by = "numID")
# create a numeric variable for time of day
# minutes after midnight
mean_cgm$numtime <- as.numeric(mean_cgm$Time) / 60
mean_cgm_tib <- as_tibble(mean_cgm)
```

```{r}
# fit LMM for glucose
lmm <- hlme(Glucose ~ numtime, random =~ numtime , 
             subject = 'numID', data = mean_cgm)
summary(lmm)

#lmm_quad <- hlme(Glucose ~ numtime + I(numtime^2), random =~ numtime, 
#             subject = 'numID', data = mean_cgm)
#summary(lmm_quad)

#lmm_quad <- hlme(Glucose ~ numtime + I(numtime^2), random =~ numtime + I(numtime^2), 
#             subject = 'numID', data = mean_cgm)
#summary(lmm_quad)

# joint model, 1 group
m1 <- Jointlcmm(fixed= Glucose ~ numtime,random=~numtime,subject='numID',
survival = Surv(survtime,Group)~ 1, hazard="Weibull",
hazardtype="PH",ng=1,data=as.data.frame(mean_cgm))
summary(m1)

# joint model - 2 groups, doesn't work
m1 <- Jointlcmm(fixed= Glucose ~ numtime,mixture = ~numtime, random=~numtime,subject='numID',
survival = Surv(survtime,Group)~ 1, hazard="Weibull",
hazardtype="PH",ng=2,data=as.data.frame(mean_cgm), B = rep(1, 12))
summary(m1)


```