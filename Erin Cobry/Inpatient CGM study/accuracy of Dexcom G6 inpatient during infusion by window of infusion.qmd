---
title: "Accuracy of the Dexcom G6 during inpatient hospitalization - by time during insulin infusion"
author: "Laura Pyle"
date: "`r format(Sys.time(), '%d %B %Y')`"
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
editor: visual
---

```{r include=FALSE}
library(dplyr)
library(cgmanalysis)
library(stringr)
library(data.table)
library(ega)
library(arsenal)
library(knitr)
library(chron)
library(M3)
library(lubridate)
library(ggplot2)


```

```{r include=TRUE, warning=FALSE, message=F, output=F}
# Import data
#setwd(home_dir)
source("/Volumes/Shared/Shared Projects/Laura/BDC/Projects/Erin Cobry/Inpatient CGM study/Data raw/AccuracyOfTheDexcomG-Glucose_R_2022-12-05_1514.r")
glucose <- data
glucose <- glucose %>% filter(!is.na(bgvalue))
glucose <- glucose %>% filter(!glucose$record_id %in% c("Test 1","Test 2"))
glucose <- glucose %>% filter(glucose$bgvalue<400)
# 5 measures <40 removed
glucose <- glucose %>% filter(glucose$bgvalue>=40)
glucose$date <- as.Date(glucose$date)
glucose$time <- as.ITime(glucose$time)
glucose$date_time <- as.POSIXct(paste(glucose$date, glucose$time), format="%Y-%m-%d %H:%M:%S")
glucose$record_id <- str_pad(as.character(glucose$record_id),3,side="left",pad="0")
# per Erin, keep only the POC/fingerstick values for now
glucose <- glucose %>% filter(bgtype==1)
glucose_keep <- glucose %>% select(record_id,date_time,bgvalue,bgtype.factor)

source("/Volumes/Shared/Shared Projects/Laura/BDC/Projects/Erin Cobry/Inpatient CGM study/Data raw/AccuracyOfTheDexcomG-PatientInfoAndLocati_R_2022-12-08_1319.r")
patient <- data
patient <- patient %>% filter(!record_id %in% c("Test 1","Test 2"))
patient$record_id <- str_pad(as.character(patient$record_id),3,side="left",pad="0")
patient$race <- as.factor(patient$raceopts)
patient$ethnicity <- as.factor(patient$ethnicityopts)
patient$a1c <- as.numeric(patient$a1c)
patient_keep <- patient %>% select(record_id,locationfloor.factor)

# looks like a new Clarity format for the new files, need to remove first line
#newclarityfiles <- base::list.files(path = "./Data raw/Dexcom CSVs",full.names = TRUE,recursive = T)

# for (f in 51:length(newclarityfiles)) {
#   print(newclarityfiles[f])
#   table <- read.csv(newclarityfiles[f])
#   table <- table[-1,]
#   table <- table[,1:14]
#   colnames(table) <- c("Index","Timestamp (YYYY-MM-DDThh:mm:ss)","Event Type",
#                        "Event Subtype","Patient Info","Device Info",
#                        "Source Device ID","Glucose Value (mg/dL)",
#                        "Insulin Value (u)","Carb Value (grams)",
#                        "Duration (hh:mm:ss)","Glucose Rate of Change (mg/dL/min)",
#                        "Transmitter Time (Long Integer)","Transmitter ID")
#   write.csv(table,newclarityfiles[f], row.names = F)
# }

# Read in csv files
#cleandata(inputdirectory = "./Data raw/Dexcom CSVs", outputdirectory = "./Data clean/Clean CSVs", verbose = F, id_filename = T, gapfill = F, removegaps = F)

files <- base::list.files(path = "/Volumes/Shared/Shared Projects/Laura/BDC/Projects/Erin Cobry/Inpatient CGM study/Data clean/Clean CSVs",full.names = TRUE,recursive = T)

# need to modify this code so it extracts the ID prior to "_" and then pads with zeroes
cgm <- NULL
for (f in 1:length(files)){
  table <- read.csv(files[f])
  # fix study ID in each file
  for (i in 1:nrow(table)) {
    table[i,]$subjectid <- word(table[1,]$subjectid,1,sep="_")    
    table[i,]$subjectid <- str_pad(as.character(table[i,]$subjectid),3,side="left",pad="0")
  }
  # append the files
  cgm <- rbind(cgm,table)
}
#cgm$date_time <- as.POSIXct(cgm$timestamp, '%Y-%m-%d %H:%M:%S', tz=Sys.timezone())
cgm$date_time <- as.POSIXct(cgm$timestamp, '%Y-%m-%d %H:%M:%S', tz=Sys.timezone())
#cgm$date_time <- as.POSIXct(cgm$timestamp, '%Y-%m-%d %H:%M:%S', tz="UTC")
cgm$date <- as.Date(cgm$date_time)
cgm$time <- as.ITime(cgm$date_time)
cgm$record_id <- cgm$subjectid
cgm_keep <- cgm %>% select(record_id,date_time,sensorglucose)

# read in start and stop date/time of insulin administration and exclude times outside this window
iv_time <- read.csv("/Volumes/Shared/Shared Projects/Laura/BDC/Projects/Erin Cobry/Inpatient CGM study/Data raw/AccuracyOfTheDexcomG-IVInsulin_DATA_2023-02-24_2222.csv")
iv_time <- iv_time %>% select(record_id,gtt_start_daet,insulin_drip_stop)
iv_time$record_id <- str_pad(iv_time$record_id,3,pad="0")
iv_time$gtt_start_daet <- mdy_hm(iv_time$gtt_start_daet)
iv_time$insulin_drip_stop <- mdy_hm(iv_time$insulin_drip_stop)
cgm_keep <- merge(cgm_keep,iv_time,by="record_id",all.x=T,all.y=F)
ins_duration <- iv_time
ins_duration$ins_duration <- ins_duration$insulin_drip_stop - ins_duration$gtt_start_daet
ins_duration <- ins_duration %>% select(record_id, ins_duration)
patient <- merge(patient, ins_duration, by="record_id", all.x = T, all.y = F)
# previously we were deleting glucose values outside IV drip
#cgm_keep <- cgm_keep %>% filter(date_time>=gtt_start_daet)
#cgm_keep <- cgm_keep %>% filter(date_time<=insulin_drip_stop)
# now create variable for categories of time
# not on insulin, 0-3 hours, 3-6 hours, 6+ hours
cgm_keep$time_from_ins_start <- as.numeric((cgm_keep$date_time - cgm_keep$gtt_start_daet ) / 3600) -7
# now categorize times
cgm_keep$time_window <- case_when(
  cgm_keep$time_from_ins_start<0 ~ "Not on insulin drip",
  cgm_keep$date_time>cgm_keep$insulin_drip_stop ~ "Not on insulin drip",
  cgm_keep$time_from_ins_start>=0 & cgm_keep$time_from_ins_start<3 & cgm_keep$date_time<=cgm_keep$insulin_drip_stop ~ "0 - 3 hours",
   cgm_keep$time_from_ins_start>=3 & cgm_keep$time_from_ins_start<6 & cgm_keep$date_time<=cgm_keep$insulin_drip_stop  ~ "3-6 hours",
   cgm_keep$time_from_ins_start>=6 & cgm_keep$date_time<=cgm_keep$insulin_drip_stop ~ "6+ hours"
)


glucose_keep <- merge(glucose_keep,iv_time,by="record_id",all.x=T,all.y=F)
#glucose_keep <- glucose_keep %>% filter(date_time>=gtt_start_daet)
#glucose_keep <- glucose_keep %>% filter(date_time<=insulin_drip_stop)

# find CGM measure that is closest to each POC glucose by ID and date/time, with no more than 5 minutes difference
glucose_keep$cgm_glucose <- unlist(apply(glucose_keep,1,function(r){
  dt = as.POSIXct(r["date_time"])
  i = as.character(r["record_id"])
  dat = cgm_keep[cgm_keep$record_id==i,]
  x = dat$sensorglucose[which.min(abs(dat$date_time-dt))]
  if(identical(x, integer(0))) {x = NA}
  try(if(is.na(dt) | abs(difftime(dat$date_time[which.min(abs(dat$date_time-dt))],dt,units = "mins")) > 5 ){x = NA})
  return(x)
}))
glucose_keep$time_window <- unlist(apply(glucose_keep,1,function(r){
  dt = as.POSIXct(r["date_time"])
  i = as.character(r["record_id"])
  dat = cgm_keep[cgm_keep$record_id==i,]
  x = dat$time_window[which.min(abs(dat$date_time-dt))]
  if(identical(x, integer(0))) {x = NA}
  try(if(is.na(dt) | abs(difftime(dat$date_time[which.min(abs(dat$date_time-dt))],dt,units = "mins")) > 5 ){x = NA})
  return(x)
}))
glucose_keep$time_from_ins_start <- ((glucose_keep$date_time - glucose_keep$gtt_start_daet)/60) - 6
glucose_keep$time_window <- case_when(
  !is.na(glucose_keep$time_window) ~ glucose_keep$time_window,
  is.na(glucose_keep$time_window) & glucose_keep$time_from_ins_start<0 ~ "Not on insulin drip",
  is.na(glucose_keep$time_window) & glucose_keep$date_time>glucose_keep$insulin_drip_stop ~ "Not on insulin drip",
  is.na(glucose_keep$time_window) & glucose_keep$time_from_ins_start>=0 & glucose_keep$time_from_ins_start<3 & glucose_keep$date_time<=glucose_keep$insulin_drip_stop ~ "0 - 3 hours",
   is.na(glucose_keep$time_window) & glucose_keep$time_from_ins_start>=3 & glucose_keep$time_from_ins_start<6 & glucose_keep$date_time<=glucose_keep$insulin_drip_stop  ~ "3-6 hours",
   is.na(glucose_keep$time_window) & glucose_keep$time_from_ins_start>=6 & glucose_keep$date_time<=glucose_keep$insulin_drip_stop ~ "6+ hours"
)

# merge in patient location
glucose_keep <- merge(glucose_keep,patient_keep,by="record_id",all.x = T,all.y=F)

# calculate absolute and relative difference
glucose_keep$absdiff <- glucose_keep$cgm_glucose - glucose_keep$bgvalue
glucose_keep$relativediff <- (glucose_keep$absdiff/glucose_keep$bgvalue)*100

# create strata for comparisons
glucose_keep$DKA <- ifelse(glucose_keep$record_id %in% c('002','006','014','016','020','021','022','025','026','027','032','036','037','038','046','047','051','052','055','059','060','063','064','067','069','071','072','077','080','082','083','085','086','088','089','093','094','096','098','107','112','116','118'),"DKA","No DKA")
glucose_keep$AKI <- ifelse(glucose_keep$record_id %in% c('002','016','022','032','036','047',"051","052","060","064","072","080","082","086","089","094"),"AKI","No AKI")
glucose_keep$ICU <- ifelse(glucose_keep$record_id %in% c("002","022","032","036","047","051","052","055","060","075","083","086","088","089","092","094","098","016","017","064"),"ICU","No ICU")
glucose_keep$tylenol <- ifelse(glucose_keep$record_id %in% c("001","002","005","008","011","012","013","019","022","028","035","038","039","040","043","045","047","049","050","053","057","061","062","064","074","075","076","077","083","086","089","092","095","100","107","118"),"Tylenol","No Tylenol")
glucose_keep$contrast <- ifelse(glucose_keep$record_id %in% c("035","053","054","075","091"),"Contrast","No Contrast")
glucose_keep$vasoactive <- ifelse(glucose_keep$record_id %in% c("008","017","075","092"),"Vasoactive Meds","No Vasoactive Meds")
glucose_keep$DKA_severity <- ifelse(glucose_keep$record_id %in% c("002","016","022","032","037","038","047","051","052","055","059",'064',"083","086","098"),"Severe DKA",ifelse(glucose_keep$record_id %in% c("006","014","020","021","025","026","027","036","046","060","063","067","069","071","072","077","080","082","085","088","089","093","094","096","107","112","116","118"),"Non-severe DKA","NA"))

#    The proportion (or percent) of CGM values that are within 15% of the BG level when the BG level is >100mg/dl AND within 15mg/dl of the BG value when the BG value is <= 100mg/dl. So this is one percentage that encompasses both of these scenarios. So if we had 10 paired values total and 2 met criteria for the 15% and 2 met criteria for the 15mg/dl, then there would be 4 out of ten or 40% that were within the 15/15.
#    The 20/20 would be the % of CGM values within 20% of the BG value when the BG value is>100mg/dl AND within 20mg/dl of the BG value when the BG value is <= 100mg/dl.
#    And the 30/30 is the % of CGM values within 30% of the BG value when the BG value is >100mg/dl AND within 30mg/dl of the BG value when the BG value is <=100mg/dl.

glucose_keep <- glucose_keep %>% mutate(in_15_15 = case_when(
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue<=100 & abs(absdiff)<=15 ~ 1,
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue<=100 & abs(absdiff)>15 ~ 0,
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue>100 & abs(absdiff)<=(0.15*bgvalue) ~ 1,
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue>100 & abs(absdiff)>(0.15*bgvalue) ~ 0,
))  
glucose_keep <- glucose_keep %>% mutate(in_20_20 = case_when(
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue<=100 & abs(absdiff)<=20 ~ 1,
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue<=100 & abs(absdiff)>20 ~ 0,
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue>100 & abs(absdiff)<=(0.2*bgvalue) ~ 1,
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue>100 & abs(absdiff)>(0.2*bgvalue) ~ 0,
)) 
glucose_keep <- glucose_keep %>% mutate(in_30_30 = case_when(
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue<=100 & abs(absdiff)<=30 ~ 1,
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue<=100 & abs(absdiff)>30 ~ 0,
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue>100 & abs(absdiff)<=(0.3*bgvalue) ~ 1,
  !is.na(bgvalue) & !is.na(absdiff) & bgvalue>100 & abs(absdiff)>(0.3*bgvalue) ~ 0,
)) 
glucose_keep$in_15_15 <- as.factor(glucose_keep$in_15_15)
glucose_keep$in_20_20 <- as.factor(glucose_keep$in_20_20)
glucose_keep$in_30_30 <- as.factor(glucose_keep$in_30_30)

# keep only patients admitted for DKA
glucose_keep <- glucose_keep %>% filter(DKA=="DKA")

# separate df for ICU and medical floor/ED
icu <- glucose_keep %>% filter(locationfloor.factor=="ICU")
med_ed <- glucose_keep %>% filter(locationfloor.factor=="Medical Floor/ED")

# for demographics, remove duplicate MRNs
demo <- patient %>% group_by(mrn) %>% slice(1)
#demo <- demo %>% filter(record_id %in% glucose_keep$record_id)
demo$admissiondate <- as.Date(demo$admissiondate, format="%Y-%m-%d")
demo$admissiontime <- as.ITime(demo$admissiontime)
demo$diagnosis_date <- as.Date(demo$diagnosis_date, format="%Y-%m-%d")
demo$dischargedate <- as.Date(demo$dischargedate, format="%Y-%m-%d")
demo$dischargetime <- as.ITime(demo$dischargetime)
demo$dob <- as.Date(demo$dob, format="%Y-%m-%d")
demo$duration_years <- difftime(demo$diagnosis_date, demo$dob)/365.25
demo$admit <- combine.date.and.time(demo$admissiondate,demo$admissiontime)
demo$discharge <- combine.date.and.time(demo$dischargedate,demo$dischargetime)
demo$admit_length_hours <- difftime(demo$discharge, demo$admit)
# add number of POC glucoses per patient
numpoc <- glucose_keep %>% group_by(record_id) %>% 
filter(bgtype.factor=="POC (Fingerstick) blood glucose meter") %>% 
  summarise(POC_n = n())
demo <- merge(demo, numpoc, by="record_id", all.x = T, all.y = F)
```

# Background and Methods

-   Hospital glucose values were imported from REDCap. For this analysis, only POC glucose values were included.

-   CGM data were processed using the cgmanalysis package.

-   For each hospital glucose value, the closest CGM glucose value within 5 minutes was identified.

-   The Clarke Error Grid was plotted using the $ega$ package in R.

-   The relative difference was calculated as $(CGM glucose - hospital glucose) / hospital glucose) * 100%$.

# Descriptive statistics

```{r include=TRUE, warning=FALSE, message=F}
t1 <- tableby(data=demo,  ~ age + gender.factor + race + ethnicity + 
                pumpuser.factor + automatedyn.factor + a1c + duration_years + admit_length_hours + POC_n + ins_duration, numeric.stats=c("Nmiss2","median","q1q3"))
kable(summary(t1))

```

# 

# Not on insulin drip

## Clarke error grid

```{r include=TRUE, warning=FALSE, message=F}
g <- glucose_keep %>% filter(time_window == "Not on insulin drip")
zones <- getClarkeZones(referenceVals = g$bgvalue, testVals = g$cgm_glucose)
table(zones)
round (table (zones) / length (zones) * 100, digits=2)

p <- plotClarkeGrid(referenceVals = g$bgvalue, testVals = g$cgm_glucose,xlab="POC glucose (mg/dL)",ylab = "CGM glucose (mg/dL)" )
p + scale_color_manual(values=c("chartreuse3","yellow2","red","blue","black")) +
  coord_cartesian(ylim = c(0, 405), xlim = c(0, 405)) 

```

## MARD

```{r include=TRUE, warning=FALSE, message=F}
mardt <- tableby(data=glucose_keep[glucose_keep$time_window == "Not on insulin drip",],  ~ relativediff,numeric.stats=c("meansd"))
kable(summary(mardt))

```

## 15/15, 20/20, 30/30

```{r include=TRUE, warning=FALSE, message=F}
t <- tableby(data=glucose_keep[glucose_keep$time_window == "Not on insulin drip",],  ~ in_15_15 + in_20_20 + in_30_30)
kable(summary(t))

```

## 

# 0 - \< 3 hours on insulin drip

## Clarke error grid

```{r include=TRUE, warning=FALSE, message=F}
g <- glucose_keep %>% filter(time_window == "0 - 3 hours")
zones <- getClarkeZones(referenceVals = g$bgvalue, testVals = g$cgm_glucose)
table(zones)
round (table (zones) / length (zones) * 100, digits=2)

p <- plotClarkeGrid(referenceVals = g$bgvalue, testVals = g$cgm_glucose,xlab="POC glucose (mg/dL)",ylab = "CGM glucose (mg/dL)" )
p + scale_color_manual(values=c("chartreuse3","yellow2","red","blue","black")) +
  coord_cartesian(ylim = c(0, 405), xlim = c(0, 405)) 

```

## MARD

```{r include=TRUE, warning=FALSE, message=F}
mardt <- tableby(data=glucose_keep[glucose_keep$time_window == "0 - 3 hours",],  ~ relativediff,numeric.stats=c("meansd"))
kable(summary(mardt))

```

## 15/15, 20/20, 30/30

```{r include=TRUE, warning=FALSE, message=F}
t <- tableby(data=glucose_keep[glucose_keep$time_window == "0 - 3 hours",],  ~ in_15_15 + in_20_20 + in_30_30)
kable(summary(t))

```

## 

# 3 - \< 6 hours on insulin drip

## Clarke error grid

```{r include=TRUE, warning=FALSE, message=F}
g <- glucose_keep %>% filter(time_window == "3-6 hours")
zones <- getClarkeZones(referenceVals = g$bgvalue, testVals = g$cgm_glucose)
table(zones)
round (table (zones) / length (zones) * 100, digits=2)

p <- plotClarkeGrid(referenceVals = g$bgvalue, testVals = g$cgm_glucose,xlab="POC glucose (mg/dL)",ylab = "CGM glucose (mg/dL)" )
p + scale_color_manual(values=c("chartreuse3","yellow2","red","blue","black")) +
  coord_cartesian(ylim = c(0, 405), xlim = c(0, 405)) 

```

## MARD

```{r include=TRUE, warning=FALSE, message=F}
mardt <- tableby(data=glucose_keep[glucose_keep$time_window == "3-6 hours",],  ~ relativediff,numeric.stats=c("meansd"))
kable(summary(mardt))

```

## 15/15, 20/20, 30/30

```{r include=TRUE, warning=FALSE, message=F}
t <- tableby(data=glucose_keep[glucose_keep$time_window == "3-6 hours",],  ~ in_15_15 + in_20_20 + in_30_30)
kable(summary(t))

```

## 

# 6+ hours on insulin drip

## Clarke error grid

```{r include=TRUE, warning=FALSE, message=F}
g <- glucose_keep %>% filter(time_window == "6+ hours")
zones <- getClarkeZones(referenceVals = g$bgvalue, testVals = g$cgm_glucose)
table(zones)
round (table (zones) / length (zones) * 100, digits=2)

p <- plotClarkeGrid(referenceVals = g$bgvalue, testVals = g$cgm_glucose,xlab="POC glucose (mg/dL)",ylab = "CGM glucose (mg/dL)" )
p + scale_color_manual(values=c("chartreuse3","yellow2","red","blue","black")) +
  coord_cartesian(ylim = c(0, 405), xlim = c(0, 405)) 

```

## MARD

```{r include=TRUE, warning=FALSE, message=F}
mardt <- tableby(data=glucose_keep[glucose_keep$time_window == "6+ hours",],  ~ relativediff,numeric.stats=c("meansd"))
kable(summary(mardt))

```

## 15/15, 20/20, 30/30

```{r include=TRUE, warning=FALSE, message=F}
t <- tableby(data=glucose_keep[glucose_keep$time_window == "6+ hours",],  ~ in_15_15 + in_20_20 + in_30_30)
kable(summary(t))

```

## 
