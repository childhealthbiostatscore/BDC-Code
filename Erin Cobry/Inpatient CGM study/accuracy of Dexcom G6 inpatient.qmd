---
title: "Accuracy of the Dexcom G6 during inpatient hospitalization"
author: "Laura Pyle"
date: "`r format(Sys.time(), '%d %B %Y')`"
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
editor: visual
---

```{r include=FALSE}
library(dplyr)
library(cgmanalysis)
library(stringr)
library(data.table)
library(ega)
library(arsenal)
library(knitr)
```

```{r include=TRUE, warning=FALSE, message=F}
# Import data
source("B:/Projects/Erin Cobry/Inpatient CGM study/Data raw/AccuracyOfTheDexcomG-Glucose_R_2022-12-05_1514.r")
glucose <- data
glucose <- glucose %>% filter(!is.na(bgvalue))
glucose <- glucose %>% filter(!glucose$record_id %in% c("Test 1","Test 2"))
glucose$date <- as.Date(glucose$date)
glucose$time <- as.ITime(glucose$time)
glucose$date_time <- as.POSIXct(paste(glucose$date, glucose$time), format="%Y-%m-%d %H:%M:%S")
glucose$record_id <- str_pad(as.character(glucose$record_id),3,side="left",pad="0")
# per Erin, keep only the POC/fingerstick values for now
glucose <- glucose %>% filter(bgtype==1)
glucose_keep <- glucose %>% select(record_id,date_time,bgvalue,bgtype.factor)

source("B:/Projects/Erin Cobry/Inpatient CGM study/Data raw/AccuracyOfTheDexcomG-PatientInfoAndLocati_R_2022-12-05_1533.r")
patient <- data
patient <- patient %>% filter(!record_id %in% c("Test 1","Test 2"))
patient$record_id <- str_pad(as.character(patient$record_id),3,side="left",pad="0")
patient$race <- as.factor(patient$raceopts)
patient$ethnicity <- as.factor(patient$ethnicityopts)
patient_keep <- patient %>% select(record_id,locationfloor.factor)

# Read in csv files
cleandata(inputdirectory = "B:/Projects/Erin Cobry/Inpatient CGM study/Data raw/Dexcom CSVs", outputdirectory = "B:/Projects/Erin Cobry/Inpatient CGM study/Data clean/Clean CSVs", verbose = T, id_filename = T, gapfill = F, removegaps = F)

files <- base::list.files(path = "B:/Projects/Erin Cobry/Inpatient CGM study/Data clean/Clean CSVs",full.names = TRUE,recursive = T)

cgm <- NULL
for (f in 1:length(files)){
  table <- read.csv(files[f])
  # fix study ID in each file
  for (i in 1:nrow(table)) {
    table[i,]$subjectid <- str_sub(table[1,]$subjectid,1,3)
  }
  # append the files
  cgm <- rbind(cgm,table)
}
cgm$date_time <- as.POSIXct(cgm$timestamp, '%Y-%m-%d %H:%M:%S', tz=Sys.timezone())
cgm$date <- as.Date(cgm$date_time)
cgm$time <- as.ITime(cgm$date_time)
cgm$record_id <- cgm$subjectid
cgm_keep <- cgm %>% select(record_id,date_time,sensorglucose)

# find CGM measure that is closest to each POC glucose by ID and date/time, with no more than 15 minutes difference
glucose_keep$cgm_glucose <- unlist(apply(glucose_keep,1,function(r){
  dt = as.POSIXct(r["date_time"])
  i = as.character(r["record_id"])
  dat = cgm_keep[cgm_keep$record_id==i,]
  x = dat$sensorglucose[which.min(abs(dat$date_time-dt))]
  if(is.na(dt) | abs(difftime(dat$date_time[which.min(abs(dat$date_time-dt))],dt,units = "mins")) > 15 ){x = NA}
  return(x)
}))

# merge in patient location
glucose_keep <- merge(glucose_keep,patient_keep,by="record_id",all.x = T,all.y=F)

# calculate absolute and relative difference
glucose_keep$absdiff <- glucose_keep$cgm_glucose - glucose_keep$bgvalue
glucose_keep$relativediff <- (glucose_keep$absdiff/glucose_keep$bgvalue)*100

# separate df for ICU and medical floor/ED
icu <- glucose_keep %>% filter(locationfloor.factor=="ICU")
med_ed <- glucose_keep %>% filter(locationfloor.factor=="Medical Floor/ED")

# for demographics, remove duplicate MRNs
demo <- patient %>% group_by(mrn) %>% slice(1)

 
```

# Background and Methods

-   Hospital glucose values were imported from REDCap. For this analysis, only POC glucose values were included.

-   CGM data were processed using the cgmanalysis package.

-   For each hospital glucose value, the closest CGM glucose value within 15 minutes was identified.

-   The Clarke Error Grid was plotted using the $ega$ package in R.

-   The relative difference was calculated as $(CGM glucose - hospital glucose) / hospital glucose) * 100%$.

# Descriptive statistics

```{r include=TRUE, warning=FALSE, message=F}
t1 <- tableby(data=demo,  ~ age + gender.factor + race + ethnicity + pumpuser.factor + automatedyn.factor,numeric.stats=c("Nmiss2","median","q1q3"))
kable(summary(t1))

```

# All locations combined

## Clarke error grid

```{r include=TRUE, warning=FALSE, message=F}
zones <- getClarkeZones(referenceVals = glucose_keep$bgvalue, testVals = glucose_keep$cgm_glucose)
table(zones)
round (table (zones) / length (zones) * 100, digits=2)

p <- plotClarkeGrid(referenceVals = glucose_keep$bgvalue, testVals = glucose_keep$cgm_glucose,xlab="POC glucose (mg/dL)",ylab = "CGM glucose (mg/dL)" )
p + scale_color_manual(values=c("chartreuse3","yellow2","red","blue"))

```

## MARD

```{r include=TRUE, warning=FALSE, message=F}
mardt <- tableby(data=glucose_keep,  ~ relativediff,numeric.stats=c("meansd"))
kable(summary(mardt))

```

# Medical Floor/ED

## Clarke error grid

```{r include=TRUE, warning=FALSE, message=F}
zones <- getClarkeZones(referenceVals = med_ed$bgvalue, testVals = med_ed$cgm_glucose)
table(zones)
round (table (zones) / length (zones) * 100, digits=2)

p <- plotClarkeGrid(referenceVals = med_ed$bgvalue, testVals = med_ed$cgm_glucose,xlab="POC glucose (mg/dL)",ylab = "CGM glucose (mg/dL)" )

p + scale_color_manual(values=c("chartreuse3","yellow2","red","blue"))
```

## MARD

```{r include=TRUE, warning=FALSE, message=F}
mardt <- tableby(data=med_ed,  ~ relativediff,numeric.stats=c("meansd"))
kable(summary(mardt))

```

# ICU

## Clarke error grid

```{r include=TRUE, warning=FALSE, message=F}
zones <- getClarkeZones(referenceVals = icu$bgvalue, testVals = icu$cgm_glucose)
table(zones)
round (table (zones) / length (zones) * 100, digits=2)

p <- plotClarkeGrid(referenceVals = icu$bgvalue, testVals = icu$cgm_glucose,xlab="POC glucose (mg/dL)",ylab = "CGM glucose (mg/dL)" )

p + scale_color_manual(values=c("chartreuse3","yellow2","red","blue"))
```

## MARD

```{r include=TRUE, warning=FALSE, message=F}
mardt <- tableby(data=icu,  ~ relativediff,numeric.stats=c("meansd"))
kable(summary(mardt))

```

# 
